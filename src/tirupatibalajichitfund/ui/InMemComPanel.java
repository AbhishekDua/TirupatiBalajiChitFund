/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package tirupatibalajichitfund.ui;

import java.awt.Font;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import tirupatibalajichitfund.db.MemberInfoData;
import tirupatibalajichitfund.db.TransactionData;
import tirupatibalajichitfund.db.TransactionTableClass;
import tirupatibalajichitfund.utility.Constants;
/**
 *
 * @author abhishek
 */
/*class Fr extends JFrame
{
Fr() throws Exception{
this.add(new All_Committee_Panel());
}
 public static void main(String[] arg) throws Exception
    {
    Fr t=new Fr();
    t.setSize(1680,1080);
    t.setVisible(true);
    
    }
}*/
public class InMemComPanel extends javax.swing.JPanel {

DefaultTableModel dtm;
int cfid,uid;
    /**
     * Creates new form All_Committee_Panel
     */
    public InMemComPanel(ArrayList<MemberInfoData> dataset) throws Exception {
        initComponents();
       
        dtm= new DefaultTableModel(0, 0){
            @Override
    public boolean isCellEditable(int row, int column) {
        //all cells false
        return false;
    }};
        allCommitteeTable.setModel(dtm);
        allCommitteeTable.getTableHeader().setFont(new Font("Ubuntu", Font.PLAIN, 16));
        allCommitteeTable.getAutoscrolls();
        allCommitteeTable.setRowHeight(40);
        allCommitteeTable.setFont(new Font("Serif", Font.PLAIN, 16));
        this.uid=dataset.get(0).getMember().getUid();
        setuptable(dataset);
    }
    
    
    private void setuptable(ArrayList<MemberInfoData> dataset)
    {   int count=0;
     dtm.addColumn("Sno");
     dtm.addColumn("Ref. ID");
                    dtm.addColumn("Chit Fund ID");
                    dtm.addColumn("Committee Name");
                    dtm.addColumn("Start Date");
                    dtm.addColumn("End Date");
                    dtm.addColumn("Current Turn");
                    dtm.addColumn("Credit");
                    dtm.addColumn("Debit");
        for(MemberInfoData committee:dataset)
        { count++;
            
          dtm.addRow(new Object[]{count,committee.getReferenceKey(),committee.getCommittee().getCfid(),committee.getCommittee().getCname(),committee.getCommittee().getstartdate(),
              committee.getCommittee().getenddate(),committee.getCommittee().getTurn(),committee.getMember().getCredit(),committee.getMember().getDebit()});
         
        }
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        allCommitteeTable = new javax.swing.JTable();

        setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        setPreferredSize(new java.awt.Dimension(1200, 800));

        allCommitteeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sno", "Ref. ID", "Chit Fund ID", "Committee Name", "Start Date", "End Date", "Current Turn", "Credit", "Debit"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        allCommitteeTable.setColumnSelectionAllowed(true);
        allCommitteeTable.getTableHeader().setReorderingAllowed(false);
        allCommitteeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                allCommitteeTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(allCommitteeTable);
        allCommitteeTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (allCommitteeTable.getColumnModel().getColumnCount() > 0) {
            allCommitteeTable.getColumnModel().getColumn(3).setPreferredWidth(130);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 855, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void allCommitteeTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allCommitteeTableMousePressed
        // TODO add your handling code here:
        if(evt.getClickCount()==2){
        allCommitteeTable=(JTable) evt.getSource();
        int row=allCommitteeTable.getSelectedRow();
        int column=allCommitteeTable.getSelectedColumn();
        
    //    if(column==1){
            String rfid=(String)allCommitteeTable.getValueAt(row, 1);
             try {
       ArrayList<TransactionData> dataset= TransactionTableClass.getInstance().getAllTransactionsForRefID(rfid);
       MainFrameChitFund.getInstance().setupTransactionTable(dataset,rfid,Constants.INMEMCOM);
    } catch (Exception ex) {
        Logger.getLogger(InCommitteeMemberTablePanel.class.getName()).log(Level.SEVERE, null, ex);
    }
   //}           
    }//GEN-LAST:event_allCommitteeTableMousePressed
 }   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable allCommitteeTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}

