/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package tirupatibalajichitfund.ui;

import java.awt.Font;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import tirupatibalajichitfund.db.MemberInfoData;
import tirupatibalajichitfund.db.TransactionData;
import tirupatibalajichitfund.db.TransactionTableClass;
import tirupatibalajichitfund.utility.Constants;

/**
 *
 * @author abhishek
 */

/*class Fra extends JFrame
{
Fra() throws Exception{
this.add(new InCommitteeMemberTablePanel(DbCreator.getInstance().getMemberTableFromCommittee("200001_20A")));
}
 public static void main(String[] arg) throws Exception
    {
    Fra t=new Fra();
    t.setSize(1680,1080);
    t.setVisible(true);
    }}*/
public class InCommitteeMemberTablePanel extends javax.swing.JPanel {
DefaultTableModel dtm;
int uid,cfid;
    /**
     * Creates new form InCommitteeMemberTablePanel
     */
    public InCommitteeMemberTablePanel(ArrayList<MemberInfoData> data) {
        initComponents();
        dtm= new DefaultTableModel(0, 0){
            @Override
    public boolean isCellEditable(int row, int column) {
        //all cells false
        return false;
    }
        };
        InCommitteeMemberTable.setModel(dtm);
       InCommitteeMemberTable.getTableHeader().setFont(new Font("Ubuntu", Font.PLAIN, 16));
        InCommitteeMemberTable.getAutoscrolls();
        InCommitteeMemberTable.setRowHeight(40);
        InCommitteeMemberTable.setFont(new Font("Serif", Font.PLAIN, 16));
        this.cfid=data.get(0).getCommittee().getCfid();
        setupTable(data);
    }
    private void setupTable(ArrayList<MemberInfoData> data)
    {
    int count=0;
     dtm.addColumn("Sno");
     dtm.addColumn("Ref ID");
      dtm.addColumn("Member ID");
      dtm.addColumn("Member Name");
      dtm.addColumn("Enteries");
      dtm.addColumn("Credit");
      dtm.addColumn("Debit");
      dtm.addColumn("Turns");
      for(MemberInfoData d:data)
      {
      count++;
      dtm.addRow(new Object[]{count,d.getReferenceKey(),d.getMember().getUid(),d.getMember().getName(),d.getEnteries(),
      d.getMember().getCredit(),d.getMember().getDebit(),d.getCommittee().getTurn()});
      }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        InCommitteeMemberTable = new javax.swing.JTable();

        setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        setPreferredSize(new java.awt.Dimension(1400, 800));

        InCommitteeMemberTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Sno", "Ref. ID", "MemberID", "Member Name", "Enteries", "Credit", "Debit", "Turn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        InCommitteeMemberTable.setPreferredSize(new java.awt.Dimension(1200, 800));
        InCommitteeMemberTable.getTableHeader().setReorderingAllowed(false);
        InCommitteeMemberTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                InCommitteeMemberTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(InCommitteeMemberTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void InCommitteeMemberTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InCommitteeMemberTableMousePressed
        // TODO add your handling code here:
        if(evt.getClickCount()==2){
        InCommitteeMemberTable=(JTable) evt.getSource();
        int row= InCommitteeMemberTable.getSelectedRow();
        int column=InCommitteeMemberTable.getSelectedColumn();
      //  if(column==1){
            String rfid=(String)InCommitteeMemberTable.getValueAt(row, 1);
             try {
       ArrayList<TransactionData> dataset= TransactionTableClass.getInstance().getAllTransactionsForRefID(rfid);
       MainFrameChitFund.getInstance().setupTransactionTable(dataset,rfid,Constants.INCOMMEM);
    } catch (Exception ex) {
        Logger.getLogger(InCommitteeMemberTablePanel.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }    
 //  }       
    }//GEN-LAST:event_InCommitteeMemberTableMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable InCommitteeMemberTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
