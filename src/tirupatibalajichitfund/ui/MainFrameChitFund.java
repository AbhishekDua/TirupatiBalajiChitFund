/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tirupatibalajichitfund.ui;

import java.awt.CardLayout;
import java.util.ArrayList;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import tirupatibalajichitfund.db.AllCommitteeClass;
import tirupatibalajichitfund.db.MemberInfoData;
import tirupatibalajichitfund.db.TransactionData;
import tirupatibalajichitfund.utility.Constants;

/**
 *
 * @author abhishek
 */
public class MainFrameChitFund extends javax.swing.JFrame {

    private static MainFrameChitFund mfcf;
    static String currentCommitteeIdtable, currentMemberIdtable;
    static int currentcommitteeid, currentmemberid;
    private CardLayout card;
    JPanel comm_Panel, memb_Panel, committeePanel, inCommitteeMember, meminfoPanel;
// private JPanel currentPanel,prevPanel;
    private String currentPanel, prevPanel;

    /**
     * Creates new form MainFrameChitFund
     */
    public MainFrameChitFund() throws Exception {

        initComponents();
        backButton.setEnabled(false);
        card = new CardLayout(0, 0);
        mainPanel.setLayout(card);
        mainPanel.add("hello", new HomePanel());
        setHeading("  Welcome");
        currentPanel = "  Welcome";

    }

    public static MainFrameChitFund getInstance() throws Exception {
        if (mfcf == null) {
            mfcf = new MainFrameChitFund();
            return mfcf;
        }
        return mfcf;
    }

//public void setCurrentCommitteeDbName(String name)
//{
//this.currentCommitteeIdtable=name;
//}
//public String getCurrentCommitteeDbName(){
//    return this.currentCommitteeIdtable;
//}
//public void setCurrentMemberTableName(String name)
//{
//this.currentMemberIdtable=name;
//}
//public String getCurrentMemberTableName(){
//return this.currentMemberIdtable;
//}
//public void setCurrentCommitteeId(int id)
//{
//this.currentcommitteeid=id;
//}
//public void setCurrentMemberId(int id)
//{
//this.currentmemberid=id;
//}
//public int getCurrentCommitteeId(){return this.currentcommitteeid;}
//public int getCurrentMemebrId(){return this.currentmemberid;}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        HeadingLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        fileRefresh = new javax.swing.JMenuItem();
        fileOpen = new javax.swing.JMenuItem();
        fileClose = new javax.swing.JMenuItem();
        menuCommittee = new javax.swing.JMenu();
        committeeAllComm = new javax.swing.JMenuItem();
        quickAddMemCom = new javax.swing.JMenuItem();
        conductCommittee = new javax.swing.JMenuItem();
        menuMember = new javax.swing.JMenu();
        memberAllMember = new javax.swing.JMenuItem();
        memberQuickAddTransaction = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tirupati Balaji Chit Fund");
        setPreferredSize(new java.awt.Dimension(1825, 1000));
        setResizable(false);

        mainPanel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        mainPanel.setPreferredSize(new java.awt.Dimension(1600, 800));

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 851, Short.MAX_VALUE)
        );

        HeadingLabel.setFont(new java.awt.Font("Ubuntu", 1, 20)); // NOI18N
        HeadingLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        HeadingLabel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        backButton.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        backButton.setText("HOME");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        menuBar.setBackground(java.awt.Color.gray);
        menuBar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        menuFile.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1)));
        menuFile.setText("  File  ");
        menuFile.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        menuFile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuFile.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        menuFile.setMinimumSize(new java.awt.Dimension(43, 21));

        fileRefresh.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        fileRefresh.setText("  Refresh");
        fileRefresh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fileRefresh.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        fileRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileRefreshActionPerformed(evt);
            }
        });
        menuFile.add(fileRefresh);

        fileOpen.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        fileOpen.setText("  Open");
        fileOpen.setEnabled(false);
        menuFile.add(fileOpen);

        fileClose.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        fileClose.setText("  Close");
        fileClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileCloseActionPerformed(evt);
            }
        });
        menuFile.add(fileClose);

        menuBar.add(menuFile);

        menuCommittee.setText("  Committee  ");
        menuCommittee.setToolTipText("");
        menuCommittee.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        menuCommittee.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuCommittee.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        committeeAllComm.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        committeeAllComm.setText("View All Committee");
        committeeAllComm.setActionCommand("  View All Committee");
        committeeAllComm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                committeeAllCommActionPerformed(evt);
            }
        });
        menuCommittee.add(committeeAllComm);

        quickAddMemCom.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        quickAddMemCom.setText("Quick Add Member To Committee");
        quickAddMemCom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quickAddMemComActionPerformed(evt);
            }
        });
        menuCommittee.add(quickAddMemCom);

        conductCommittee.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        conductCommittee.setText("Conduct Committee");
        conductCommittee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conductCommitteeActionPerformed(evt);
            }
        });
        menuCommittee.add(conductCommittee);

        menuBar.add(menuCommittee);

        menuMember.setText("  Member  ");
        menuMember.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        menuMember.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuMember.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        memberAllMember.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        memberAllMember.setText("  View All Members");
        memberAllMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memberAllMemberActionPerformed(evt);
            }
        });
        menuMember.add(memberAllMember);

        memberQuickAddTransaction.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        memberQuickAddTransaction.setText("Quick Add Transaction");
        memberQuickAddTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memberQuickAddTransactionActionPerformed(evt);
            }
        });
        menuMember.add(memberQuickAddTransaction);

        menuBar.add(menuMember);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(HeadingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 1615, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1816, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(HeadingLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 851, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fileRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileRefreshActionPerformed
        // TODO add your handling code here:
        if (fileRefresh.equals(evt.getSource())) {
            try {

                // dbc.check();
            } catch (Exception ex) {
                Logger.getLogger(MainFrameChitFund.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_fileRefreshActionPerformed

    public void setHeading(String text) {
        HeadingLabel.setText(text);
    }

    private void fileCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileCloseActionPerformed
        // TODO add your handling code here:
        if (fileClose.equals(evt.getSource())) {
            //this.dispose();
            System.exit(1);
        }
    }//GEN-LAST:event_fileCloseActionPerformed

    public void setupCommitteeTable() {
        try {
            prevPanel = currentPanel;
            enableBack();
            JPanel allComm = new All_Committee_Panel();
            mainPanel.add("Committee", allComm);
            card = (CardLayout) mainPanel.getLayout();
            card.show(mainPanel, "Committee");
            setHeading("   Committee List");
            currentPanel = "   Committee List";
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Some Error Occurred");
            Logger.getLogger(MainFrameChitFund.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void setupTransactionTable(ArrayList<TransactionData> dataset, String heading,String tag) {
        try {
            prevPanel = currentPanel;
            enableBack();
            JPanel allComm = new MemberComAccountSheet(dataset,heading,tag);
            mainPanel.add("Transaction", allComm);
            card = (CardLayout) mainPanel.getLayout();
            card.show(mainPanel, "Transaction");
            setHeading("   Transactions For-" + heading);
            currentPanel = "   Transactions For" + heading;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Some Error Occurred");
            Logger.getLogger(MainFrameChitFund.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void setupInMemComPanel(ArrayList<MemberInfoData> data, String heading) {

        try {
            prevPanel = currentPanel;
            enableBack();
            JPanel allMem = new InMemComPanel(data);
            mainPanel.add("InMem", allMem);
            card = (CardLayout) mainPanel.getLayout();
            card.show(mainPanel, "InMem");
            setHeading("   Member- " + heading);
            currentPanel = "    Member-" + heading;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Some Error Occurred");
            Logger.getLogger(MainFrameChitFund.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void setupInComMemberPanel(ArrayList<MemberInfoData> data, String heading) {
        try {
            prevPanel = currentPanel;
            enableBack();
            JPanel allMem = new InCommitteeMemberTablePanel(data);
            mainPanel.add("InCom", allMem);
            card = (CardLayout) mainPanel.getLayout();
            card.show(mainPanel, "InCom");
            setHeading("   Committee Name-" + heading);
            currentPanel = "   Committee Name-" + heading;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Some Error Occurred");
            Logger.getLogger(MainFrameChitFund.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void setupMemberTable() {
        try {
            prevPanel = currentPanel;
            enableBack();
            JPanel allMem = new All_Member_Panel();
            mainPanel.add("Member", allMem);
            card = (CardLayout) mainPanel.getLayout();
            card.show(mainPanel, "Member");
            setHeading("   Member List");
            currentPanel = "   Member List";
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Some Error Occurred");
            Logger.getLogger(MainFrameChitFund.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    private void committeeAllCommActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_committeeAllCommActionPerformed
        // TODO add your handling code here:
        if (committeeAllComm.equals(evt.getSource())) {
            setupCommitteeTable();
        }
    }//GEN-LAST:event_committeeAllCommActionPerformed

    private void memberAllMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memberAllMemberActionPerformed
        // TODO add your handling code here:
        if (memberAllMember.equals(evt.getSource())) {
            setupMemberTable();
        }
    }//GEN-LAST:event_memberAllMemberActionPerformed
    public void disableBack() {
        backButton.setEnabled(false);
    }

    public void enableBack() {
        backButton.setEnabled(true);
    }
    
    private void loadHome(){
     HomePanel hpanel=new HomePanel();
            card = (CardLayout) mainPanel.getLayout();
            setHeading("  Welcome");
            currentPanel = "  Welcome";
            card.show(mainPanel, "hello");
    }
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        if (backButton.equals(evt.getSource())) {
           loadHome();
            
//            if (prevPanel != null && prevPanel != currentPanel) {
//                if (prevPanel.contains("Welcome")) {
//                    card = (CardLayout) mainPanel.getLayout();
//                    card.show(mainPanel, "hello");
//                    setHeading("  Welcome");
//                    currentPanel = "  Welcome";
//                    prevPanel = null;
//                    disableBack();
//                } else if (prevPanel.contains("Committee List")) {
//                    setupCommitteeTable();
//                } else if (prevPanel.contains("Member List")) {
//                    setupMemberTable();
//                }
//            } else {
//                disableBack();
//            }
        }
    }//GEN-LAST:event_backButtonActionPerformed

    private void quickAddMemComActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quickAddMemComActionPerformed
        // TODO add your handling code here:
        if(quickAddMemCom.equals(evt.getSource())){
          AddMemberToCommittee j=  new AddMemberToCommittee();
          j.setVisible(true);
          
        }
    }//GEN-LAST:event_quickAddMemComActionPerformed

    private void memberQuickAddTransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memberQuickAddTransactionActionPerformed
        // TODO add your handling code here:
        if(memberQuickAddTransaction.equals(evt.getSource())){
            QuickAddTransaction qat=new QuickAddTransaction();
            try {
                qat.QuickAddTransactionMainFrameSetup(AllCommitteeClass.getInstance().getAllCommitteesActive());
            } catch (Exception ex) {
                Logger.getLogger(MainFrameChitFund.class.getName()).log(Level.SEVERE, null, ex);
            }
            qat.setVisible(true);
        }
    }//GEN-LAST:event_memberQuickAddTransactionActionPerformed

    private void conductCommitteeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conductCommitteeActionPerformed
        // TODO add your handling code here:
        if(conductCommittee.equals(evt.getSource())){
            QuickAddTransaction qat=new QuickAddTransaction();
            try {
                qat.QuickAddForConduct("Conduct Committee",Constants.CONDUCT_COMMITTEE,AllCommitteeClass.getInstance().getAllCommitteesActive());
            } catch (Exception ex) {
                Logger.getLogger(MainFrameChitFund.class.getName()).log(Level.SEVERE, null, ex);
            }
            qat.setVisible(true);
        }
    }//GEN-LAST:event_conductCommitteeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws Exception {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrameChitFund.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrameChitFund.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrameChitFund.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrameChitFund.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        mfcf = new MainFrameChitFund();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    mfcf.setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(MainFrameChitFund.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel HeadingLabel;
    private javax.swing.JButton backButton;
    private javax.swing.JMenuItem committeeAllComm;
    private javax.swing.JMenuItem conductCommittee;
    private javax.swing.JMenuItem fileClose;
    private javax.swing.JMenuItem fileOpen;
    private javax.swing.JMenuItem fileRefresh;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuItem memberAllMember;
    private javax.swing.JMenuItem memberQuickAddTransaction;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuCommittee;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu menuMember;
    private javax.swing.JMenuItem quickAddMemCom;
    // End of variables declaration//GEN-END:variables
}
